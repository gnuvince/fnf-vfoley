#!/usr/bin/env python

import getopt
import numpy as np
import os
import sys

PROGNAME = os.path.basename(sys.argv[0])

def print_stat(name, value):
    print("{0:8}: {1:.4}".format(name, value))

def compute_stats(filehandle):
    numbers = []
    for line in filehandle:
        try:
            numbers.append(float(line))
        except ValueError:
            sys.stderr.write("{0}: not a number: '{1}'\n".format(
                PROGNAME, line.strip()
            ))
    a = np.array(numbers)
    print_stat("sum", np.sum(a))
    print_stat("min", np.min(a))
    print_stat("max", np.max(a))
    print_stat("median", np.percentile(a, 50))
    print_stat("mean", np.mean(a))
    print_stat("std", np.std(a))
    print_stat("p75", np.percentile(a, 75))
    print_stat("p90", np.percentile(a, 90))
    print_stat("p95", np.percentile(a, 95))
    print_stat("p99", np.percentile(a, 99))

def compute_stats_single(filehandle):
    numbers = []
    for line in filehandle:
        try:
            numbers.append(float(line))
        except ValueError:
            sys.stderr.write("{0}: not a number: '{1}'\n".format(
                PROGNAME, line.strip()
            ))
    a = np.array(numbers)
    print("{} {} {} {} {} {} {} {} {} {}".format(
        np.sum(a),
        np.min(a),
        np.max(a),
        np.percentile(a, 50),
        np.mean(a),
        np.std(a),
        np.percentile(a, 75),
        np.percentile(a, 90),
        np.percentile(a, 95),
        np.percentile(a, 99)
    ))


opts, args = getopt.getopt(sys.argv[1:], "s")
opts = dict(opts)
output_fn = compute_stats if "-s" not in opts else compute_stats_single

if not args:
    output_fn(sys.stdin)
else:
    for filename in args:
        if filename == '-':
            output_fn(sys.stdin)
        else:
            with open(filename) as f:
                output_fn(f)
